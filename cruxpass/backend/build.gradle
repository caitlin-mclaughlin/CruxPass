plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cruxpass'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task generateJwtKey(type: JavaExec) {
    group = "tools"
    description = "Generates a new JWT secret key"
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.example.betabase.tools.GenerateSecretKey'
}

test {
    useJUnitPlatform()
}