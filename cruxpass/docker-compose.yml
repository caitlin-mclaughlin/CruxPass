# docker-compose.yml
services:
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cruxpass
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: edoburu/pgbouncer
    ports:
      - "6432:6432"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
    volumes:
      - ./pgbouncer:/etc/pgbouncer
      - ./pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "6432"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
#      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://pgbouncer:6432/cruxpass?preferQueryMode=simple
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_MAIN_LOG_STARTUP_INFO: "false"
      JAVA_TOOL_OPTIONS: "-Doracle.jdbc.sendExtraFloatDigits=false -Dorg.postgresql.disableColumnSanitiser=true"
      JWT_SECRET: K1zXFjXWSgooykgSF795sDI1wF/+lXhQcuwfnHwUAvk=  # <-- new env var
    depends_on:
      - pgbouncer
# -Dlogging.level.org.springframework.web=DEBUG -Dlogging.level.org.springframework.security=DEBUG 
volumes:
  postgres-data:


#    deploy:
#      replicas: 3
#      resources:
#        limits:
#          cpus: "0.50"
#          memory: 512M
#        reservations:
#          cpus: "0.25"
#          memory: 256M
#      restart_policy:
#        condition: on-failure
#      update_config:
#        parallelism: 2
#        delay: 10s
